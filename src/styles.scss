// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import "~@angular/material/theming";
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$privateChat-primary: mat-palette($mat-indigo);
$privateChat-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$privateChat-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$privateChat-theme: mat-light-theme(
  (
    color: (
      primary: $privateChat-primary,
      accent: $privateChat-accent,
      warn: $privateChat-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($privateChat-theme);

/* You can add global styles to this file, and also import other style files */
@import "./variables";
html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
  background-color: $base-background;
}

html,
body {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  height: 100%;
  font-family: sans-serif;
  input,
  button:focus {
    outline: none;
  }
  button:hover {
    cursor: pointer;
  }
  /*   custom size for material icons
 */
  .mat-icon-button.mat-button-disabled.mat-button-disabled {
    color: $text-light;
  }
  .material-icons.md-30 {
    font-size: 30px;
  }

  .material-icons.md-40 {
    height: 50px;
    width: 50px;
    font-size: 50px;
    color: $text-light;
  }
}

/*!
 * Load Awesome v1.1.0 (http://github.danielcardoso.net/load-awesome/)
 * Copyright 2015 Daniel Cardoso <@DanielCardoso>
 * Licensed under MIT
 */
.la-ball-scale-multiple,
.la-ball-scale-multiple > div {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}
.la-ball-scale-multiple {
  display: block;
  font-size: 0;
  color: #fff;
}
.la-ball-scale-multiple.la-dark {
  color: #333;
}
.la-ball-scale-multiple > div {
  display: inline-block;
  float: none;
  background-color: currentColor;
  border: 0 solid currentColor;
}
.la-ball-scale-multiple {
  width: 40px;
  height: 40px;
}
.la-ball-scale-multiple > div {
  position: absolute;
  top: 0;
  left: 0;
  width: 50px;
  height: 50px;
  border-radius: 100%;
  opacity: 0;
  -webkit-animation: ball-scale-multiple 1s 0s linear infinite;
  -moz-animation: ball-scale-multiple 1s 0s linear infinite;
  -o-animation: ball-scale-multiple 1s 0s linear infinite;
  animation: ball-scale-multiple 1s 0s linear infinite;
}
.la-ball-scale-multiple > div:nth-child(2) {
  -webkit-animation-delay: 0.2s;
  -moz-animation-delay: 0.2s;
  -o-animation-delay: 0.2s;
  animation-delay: 0.2s;
}
.la-ball-scale-multiple > div:nth-child(3) {
  -webkit-animation-delay: 0.4s;
  -moz-animation-delay: 0.4s;
  -o-animation-delay: 0.4s;
  animation-delay: 0.4s;
}
.la-ball-scale-multiple.la-sm {
  width: 16px;
  height: 16px;
}
.la-ball-scale-multiple.la-sm > div {
  width: 16px;
  height: 16px;
}
.la-ball-scale-multiple.la-2x {
  width: 64px;
  height: 64px;
}
.la-ball-scale-multiple.la-2x > div {
  width: 64px;
  height: 64px;
}
.la-ball-scale-multiple.la-3x {
  width: 96px;
  height: 96px;
}
.la-ball-scale-multiple.la-3x > div {
  width: 96px;
  height: 96px;
}
/*
 * Animation
 */
@-webkit-keyframes ball-scale-multiple {
  0% {
    opacity: 0;
    -webkit-transform: scale(0);
    transform: scale(0);
  }
  5% {
    opacity: 0.75;
  }
  100% {
    opacity: 0;
    -webkit-transform: scale(1);
    transform: scale(1);
  }
}
@-moz-keyframes ball-scale-multiple {
  0% {
    opacity: 0;
    -moz-transform: scale(0);
    transform: scale(0);
  }
  5% {
    opacity: 0.75;
  }
  100% {
    opacity: 0;
    -moz-transform: scale(1);
    transform: scale(1);
  }
}
@-o-keyframes ball-scale-multiple {
  0% {
    opacity: 0;
    -o-transform: scale(0);
    transform: scale(0);
  }
  5% {
    opacity: 0.75;
  }
  100% {
    opacity: 0;
    -o-transform: scale(1);
    transform: scale(1);
  }
}
@keyframes ball-scale-multiple {
  0% {
    opacity: 0;
    -webkit-transform: scale(0);
    -moz-transform: scale(0);
    -o-transform: scale(0);
    transform: scale(0);
  }
  5% {
    opacity: 0.75;
  }
  100% {
    opacity: 0;
    -webkit-transform: scale(1);
    -moz-transform: scale(1);
    -o-transform: scale(1);
    transform: scale(1);
  }
}
